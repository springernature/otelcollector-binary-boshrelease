#!/usr/bin/env bash
#
set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Load job properties
source /var/vcap/jobs/otelcollector-bin/data/properties.sh

# Setup env vars and folders for the ctl script
source /var/vcap/jobs/otelcollector-bin/packages/otelcollector-linux-amd64/bosh-helpers/setup.sh "otelcollector-bin"

# Load function lib (alway before setup, there are some global variables needed)
source /var/vcap/jobs/otelcollector-bin/packages/otelcollector-linux-amd64/bosh-helpers/lib.sh

case ${1:-help} in
  start)
    echon_log "Starting $COMPONENT: "
    pid_guard $PIDFILE $COMPONENT
    (
        {
            <% if_p("otelcollector-bin.setcap") do |caps| %>
            <% caps.each do |cap| %>
            setcap '<%= cap %>' $(readlink -nf $(which otelcollector))
            <% end %>
            <% end %>
            <% if p("ingress.enabled") != true %>
            rm -f /var/vcap/jobs/$NAME/config/ingress_port.yml
            <% end %>
            exec chpst -v otelcollector --config=/var/vcap/jobs/$NAME/config/config.yaml <% if_p("otelcollector-bin.feature-gates") do |gates| %><%= (gates.length > 0) ? "--feature-gates=#{gates.join(',')}" : '' %><% end %>
        } >>$LOG_DIR/$COMPONENT.stdout.log \
        2>>$LOG_DIR/$COMPONENT.stderr.log
    ) &
    echo $! > $PIDFILE
    echo_log "$(<${PIDFILE}). Done"
    ;;
  stop)
    echo_log "Stopping $COMPONENT: $(<${PIDFILE}). "
    kill_and_wait $PIDFILE
    rm -f $PIDFILE
    echo_log "Done"
    ;;
  *)
    echo "Usage: $0 {start|stop}"
    ;;
esac
exit 0
